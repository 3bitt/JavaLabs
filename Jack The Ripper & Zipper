
import java.awt.CardLayout;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import java.awt.Color



public class Pakowacz {     // AKA Jack The Ripper & Zipper

	private JFrame frame;
	

	private JPanel MenuPanel;
	private JPanel ZipPanel;
	private JPanel UnzipPanel;
	
	/////////  Menu buttons /////////
	private JButton btnNewButton;
	private JButton btnNewButton_1;
	private JButton btnNewButton_2;
	
	//////// Zip buttons ////////
	private JButton ZipAddbtn;
	private JButton ZipZipbtn;
	private JButton ZipSaveTobtn;
	private JButton ZipBackbtn;
	
	private JTextArea ZipTextArea;
	private JScrollPane scrollPane;
	
	List<File> files = new ArrayList<File>();

	
	
	//////// Unzip buttons ///////
	private JButton btnSelectArch;
	private JButton btnUnzipTo;
	private JButton UnzipBackbtn;
	private JButton UnzipProceedbtn;
	
	private JTextField UnzipSelectText;
	private JTextField UnzipToText;
	
	
	final JFileChooser fc = new JFileChooser();
	private JTextField ZipSaveToText;
	
	/////////// ZIP SaveTo variable ///////////
	String dest = new String();
	
	

	/**
	 * Launch the application.
	 */
	
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Pakowacz window = new Pakowacz();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Pakowacz() {
		initialize();
		initAction();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	
	 private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 450, 347);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(new CardLayout(0, 0));
		frame.setTitle("Jack the Ripper & Zipper");

		
				///////////// MENU Panel ////////////////
		
		MenuPanel = new JPanel();
		MenuPanel.setBackground(Color.GRAY);
		frame.getContentPane().add(MenuPanel, "name_1859242952208");
		MenuPanel.setLayout(null);
		MenuPanel.setVisible(true);
		
		
		ZipPanel = new JPanel();
		ZipPanel.setBackground(Color.GRAY);
		frame.getContentPane().add(ZipPanel, "name_1861604193657");
		ZipPanel.setLayout(null);
		ZipPanel.setVisible(false);
		
		UnzipPanel = new JPanel();
		UnzipPanel.setBackground(Color.GRAY);
		frame.getContentPane().add(UnzipPanel, "name_1931822328656");
		UnzipPanel.setLayout(null);
		UnzipPanel.setVisible(false);

		
		btnNewButton = new JButton("Zip Files");		
		btnNewButton.setBounds(51, 63, 117, 53);
		MenuPanel.add(btnNewButton);
		
		btnNewButton_1 = new JButton("Unzip Files");			
		btnNewButton_1.setBounds(280, 63, 117, 53);
		MenuPanel.add(btnNewButton_1);
		
		btnNewButton_2 = new JButton("Exit");		
		btnNewButton_2.setBounds(164, 198, 117, 25);
		MenuPanel.add(btnNewButton_2);
		
		
		///////////// //////////////////		ZIP Panel       ////////////////
		
		
		
		ZipAddbtn = new JButton("Add files");		
		ZipAddbtn.setBounds(319, 37, 117, 25);
		ZipPanel.add(ZipAddbtn);
		
		
		ZipZipbtn = new JButton("Zip");
		ZipZipbtn.setEnabled(false);			
		ZipZipbtn.setBounds(319, 270, 117, 25);
		ZipPanel.add(ZipZipbtn);
		
		
		ZipBackbtn = new JButton("Back");
		ZipBackbtn.setBounds(12, 270, 117, 25);
		ZipPanel.add(ZipBackbtn);
		
		ZipSaveTobtn = new JButton("Save to...");		
		ZipSaveTobtn.setBounds(319, 164, 117, 25);
		ZipPanel.add(ZipSaveTobtn);
		
		
		ZipSaveToText = new JTextField();
		ZipSaveToText.setBackground(Color.LIGHT_GRAY);
		ZipSaveToText.setEditable(false);
		ZipSaveToText.setBounds(12, 167, 295, 19);
		ZipPanel.add(ZipSaveToText);
		ZipSaveToText.setColumns(10);
		
		ZipTextArea = new JTextArea();
		ZipTextArea.setBackground(Color.LIGHT_GRAY);
		ZipTextArea.setRows(20);
		ZipTextArea.setColumns(1);
		ZipTextArea.setEditable(false);
		ZipTextArea.setBounds(12, 12, 295, 136);
		
		
		scrollPane = new JScrollPane(ZipTextArea);
		scrollPane.setBounds(12, 12, 295, 136);
		ZipPanel.add(scrollPane);
		
		
		
				///////////// 	///////////////////			UNZIP Panel ///////////////
		
		
		
		btnSelectArch = new JButton("Select Archive");
		btnSelectArch.setBounds(12, 30, 142, 25);
		UnzipPanel.add(btnSelectArch);
		
		UnzipSelectText = new JTextField();
		UnzipSelectText.setBackground(Color.LIGHT_GRAY);
		UnzipSelectText.setEnabled(false);
		UnzipSelectText.setBounds(166, 33, 270, 19);
		UnzipPanel.add(UnzipSelectText);
		UnzipSelectText.setColumns(10);
		
		btnUnzipTo = new JButton("Unzip to...");
		btnUnzipTo.setBounds(12, 130, 142, 25);
		UnzipPanel.add(btnUnzipTo);
		
		UnzipProceedbtn = new JButton("Proceed");
		UnzipProceedbtn.setBounds(281, 215, 117, 25);
		UnzipPanel.add(UnzipProceedbtn);
		
		UnzipToText = new JTextField();
		UnzipToText.setBackground(Color.LIGHT_GRAY);
		UnzipToText.setEnabled(false);
		UnzipToText.setBounds(166, 133, 270, 19);
		UnzipPanel.add(UnzipToText);
		UnzipToText.setColumns(10);
		
		UnzipBackbtn = new JButton("Back");
		UnzipBackbtn.setBounds(26, 215, 117, 25);
		UnzipPanel.add(UnzipBackbtn);
	 	}
	
	 
private void initAction() {	
	
															////////////// Menu Panel Buttons
	btnNewButton.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent arg0) {
			ZipPanel.setVisible(true);
			MenuPanel.setVisible(false);
			if (ZipTextArea.getCaretPosition() != 0 && ZipSaveToText.getCaretPosition() != 0) {
				ZipZipbtn.setEnabled(true);
			} else {
				ZipZipbtn.setEnabled(false);
			}			
		}
	});
		
	btnNewButton_1.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
			UnzipPanel.setVisible(true);
			MenuPanel.setVisible(false);
		}
	});
		
	btnNewButton_2.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
			System.exit(-1);
		}
	});
	
	
	////////////////////////////        ZIP         ////////////////////////  ZIP Action Buttons
	
	
	ZipAddbtn.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
			fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
			fc.setDialogTitle("Select files to ZIP");
			fc.setMultiSelectionEnabled(true);
						
			try {		
			
			int returnVal = fc.showOpenDialog(null);
			
			 if (returnVal == JFileChooser.APPROVE_OPTION) {
		    		            
		            for (File file : fc.getSelectedFiles()) {
		            	files.add(file);
		            	ZipTextArea.append(file.getAbsolutePath() + "\n");		            	
		            }			 
				}			 
			} catch (Exception error) {
				 
				 JOptionPane.showMessageDialog(null, error.getMessage());		            
			 }	
			 
			/* ZIP aktywny tylko jesli podano pliki i miejsce docelowe */
			 if (ZipTextArea.getCaretPosition() != 0 && ZipSaveToText.getCaretPosition() != 0) {
					ZipZipbtn.setEnabled(true);
				} else {
					ZipZipbtn.setEnabled(false);
				}			
		}
	});	
	
	ZipSaveTobtn.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent arg0) {
			fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
			
			int returnVal = fc.showOpenDialog(null);
			
				if (returnVal == JFileChooser.APPROVE_OPTION) {
					dest = fc.getSelectedFile().getPath() + "/Zipped.zip";
					ZipSaveToText.setText(dest);					
				};
				
				/* ZIP aktywny tylko jesli podano pliki i miejsce docelowe */				
				if (ZipTextArea.getCaretPosition() != 0 && ZipSaveToText.getCaretPosition() != 0) {
					ZipZipbtn.setEnabled(true);
				} else {
					ZipZipbtn.setEnabled(false);
				}		
		}
	});
		
	
	ZipZipbtn.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {		
			
			byte[] buffer = new byte[1024];		
			
			try {				
			
			FileOutputStream zip = new FileOutputStream(dest);
			ZipOutputStream out = new ZipOutputStream(zip);			
					for (File fil : files) {
			        	
			            File plik = new File(fil.getAbsolutePath());
			            FileInputStream fis = new FileInputStream(plik);
			            out.putNextEntry(new ZipEntry(plik.getName()));
			            
			            int len;
			
			            while ((len = fis.read(buffer)) > 0) {
			                out.write(buffer, 0, len);
			            }			         
			            
			            out.closeEntry();			
			            fis.close();
			        }					
			        out.close();
			        
			} catch (IOException ioex) {
				
				System.out.println("Blad zipowania" + ioex);
			}			
			        System.out.println("Utworzono archiwum zip");
			    }
		});
		
	
	ZipBackbtn.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
			ZipSaveToText.setText(null);
			ZipTextArea.setText(null);
			MenuPanel.setVisible(true);
			ZipPanel.setVisible(false);
		}
	});
	
	
	///////////////////////////////    UNZIP      ///////////////////////////   UNZIP Action Buttons
	
	
	UnzipBackbtn.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
			MenuPanel.setVisible(true);
			UnzipPanel.setVisible(false);
		}
	});
	
	
	}
}
